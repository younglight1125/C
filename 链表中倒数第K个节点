#include <iostream>
#include "NODE.h"
using namespace std;

ListNode* FindKthToTail(ListNode* pListHead, unsigned int k)
{
	if (pListHead == nullptr || k == 0)
		return nullptr;

	ListNode* pHead = pListHead;
	ListNode* pBehind = nullptr;

	for (int i = 0; i < k-1; ++i)
	{
		if (pHead->pNext == nullptr)
			return nullptr;
		else
		pHead = pHead->pNext;
	}

	pBehind = pListHead;
	while (pHead->pNext != nullptr)
	{
		pHead = pHead->pNext;
		pBehind = pBehind->pNext;
	}
	return pBehind;
}


int main()
{
	ListNode* pNode1 = CreateListNode(1);
	ListNode* pNode2 = CreateListNode(2);
	ListNode* pNode3 = CreateListNode(3);
	ListNode* pNode4 = CreateListNode(4);
	ListNode* pNode5 = CreateListNode(5);


	ConnectListNodes(pNode1, pNode2);
	ConnectListNodes(pNode2, pNode3);
	ConnectListNodes(pNode3, pNode4);
	ConnectListNodes(pNode4, pNode5);

	printf("expected result: \n");
	ListNode* pNode = FindKthToTail(pNode1, 2);
	cout << pNode->value << endl;
	system("PAUSE");
	return 0;
}
