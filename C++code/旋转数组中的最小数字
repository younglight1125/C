#include <iostream>
#include <stack>
using namespace std;
//旋转数组的最小数字
int Min(int* number, int length)
{
	if (number == nullptr || length <= 0)
		throw new exception("Invalid input");

	int index1 = 0;
	int index2 = length - 1;
	int indexMid = index1;
	while (number[index1] >= number[index2])
	{
		if (index2 - 1 == index1)
		{
			indexMid = index2;
			break;
		}
		indexMid = (index1 + index2) / 2;

		//index1， index2，indexMid指向的值是一样的，则只能顺序查找
		if (number[index1] == number[indexMid] && number[indexMid] == number[index2])
			return MinInOrder(number, index1, index2);

		if (number[indexMid] >= number[index1])
			index1 = indexMid;
		else
			index2 = indexMid;
	}
	return number[indexMid];
}

int MinInOrder(int* number, int index1, int index2)
{	
	int result = number[index1];
	for (int i = index1 + 1; i < index2; ++i) 
	{
		if (result > number[i])
			result = number[i];
	}
	return result;
}

int main()
{
	//测试用例
	int a[10] = {3,4,5,1,2 };
	int num = Min(a, 5);
	cout << num << endl;
	system("PAUSE");
	return 0;
}
