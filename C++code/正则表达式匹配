//====================
//正则表达式匹配   （🗡指offerP124）
//'.'可以表示任一字符，'*'表示他前面的字符可以出现任意次
//======================
#include <iostream>

using namespace std;

bool matchCore(char* str, char* pattern);

bool match(char* str, char* pattern)
{
	if (*str == '\0' && *pattern == '\0')   return false;
	return matchCore(str, pattern);
}

bool matchCore(char* str, char* pattern)
{
	if (*str == '\0' && *pattern == '\0') return true;

	if (*str != '\0' && *pattern == '\0') return false;

	if (*(pattern + 1) == '*')
	{
		if (*pattern == *str || (*pattern == '.' && *str != '\0'))
			//*前面字符为空
			return matchCore(str + 1, pattern + 2)
			//忽略*前面
			|| matchCore(str, pattern + 2)
			//*前a为可以出现任意次数的字符
			|| matchCore(str + 1, pattern);
		else
			return matchCore(str, pattern + 2);
	}
	if (*str == *pattern || (*pattern == '.') && *str != '\0')
		return matchCore(str + 1, pattern + 1);

	return false;
}

int main()
{
	char* str = "aaa";
	char* pattern = "aa.a";
	bool judge = match(str, pattern);
	cout << judge << endl;
	system("PAUSE");
	return 0;
}
