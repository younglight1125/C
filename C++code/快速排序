#include <iostream>
#include <stack>
using namespace std;


//快速排序将数组分为两个部分，一个比index小，一个都比index大
int Parttition(int data[], int length, int start, int end)
{
	if (data == nullptr || length <= 0 || start < 0 || end > length)
		throw new exception("Invalid Input");

	int index = rand() % (end - start + 1) + start;
	swap(data[index], data[end]);

	int small = start - 1;
	for (index = start; index < end; ++index)
	{
		if (data[index] < data[end])
		{
			++small;
			if (small != index)
			{
				swap(data[index], data[small]);
			}
		}
	}
	++small;
	swap(data[small], data[end]);

	return small;
}
//快速排序
void QuickSort(int data[], int length, int start, int end)
{
	if (start == end)
		return;
	int index = Parttition(data,length,start, end);
	if (index > start)
		QuickSort(data, length, start, index - 1);
	if (index < end)
		QuickSort(data, length, index + 1, end);
}
int main()
{
	//测试用例
	int a[10] = { 2,7,5,1,4,11,95,3,6,52 };
	QuickSort(a, 10, 0, 9);
	for (int i = 0; i < 10; i++)
	{
		cout << a[i] << endl;
	}
	
	system("PAUSE");
	return 0;
}
