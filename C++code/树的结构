#include <iostream>
#include "NODE.h" 
#include "BinaryTree.h"
using namespace std;

bool HasSubtree(BinaryTree* pRoot1, BinaryTree* pRoot2)
{	
	bool result = false;
	if (pRoot1 != nullptr && pRoot2 != nullptr)
	{
		if (Equal(pRoot1->value, pRoot2->value))
			result = DoesTree1HaveTree2(pRoot1, pRoot2);
		if (!result)
			result = HasSubtree(pRoot1->pLeft, pRoot2);
		if (!result)
			result = HasSubtree(pRoot1->pRight, pRoot2);
	}
	return result;
}

bool DoesTree1HaveTree2(BinaryTree* pRoot1, BinaryTree* pRoot2)
{
	if (pRoot1 == nullptr)
		return false;

	if (pRoot2 == nullptr)
		return true;

	if (!Equal(pRoot1->value , pRoot2->value))
		return false;
	return DoesTree1HaveTree2(pRoot1->pLeft, pRoot2->pLeft)
		&& DoesTree1HaveTree2(pRoot1->pRight, pRoot2->pRight);
}



int main()
{
	
	
	system("PAUSE");
	return 0;
}
